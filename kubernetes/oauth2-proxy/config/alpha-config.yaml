injectResponseHeaders:
  - name: X-Auth-Request-ID-Token
    values:
      - claim: id_token
  - name: Authorization
    values:
      - claim: access_token
        prefix: 'Bearer '
metricsServer:
  BindAddress: ""
  SecureBindAddress: ""
  TLS: null
providers:
  - ADFSConfig: {}
    azureConfig:
      tenant: common
    bitbucketConfig: {}
    clientID: e3uEhv8JjvN1x7dElEoy01fbtaaHxaSM
    clientSecretFile: /config/oauth-client.secret
    githubConfig: {}
    gitlabConfig: {}
    googleConfig: {}
    id: oidc=e3uEhv8JjvN1x7dElEoy01fbtaaHxaSM
    keycloakConfig: {}
    loginGovConfig: {}
    loginURL: https://dev-jf-ctr97.us.auth0.com/authorize?audience=https://api.petclinic.ikarpov.net
    loginURLParameters:
      - default:
          - force
        name: approval_prompt
    oidcConfig:
      audienceClaims:
        - aud
      emailClaim: email
      groupsClaim: groups
      insecureSkipNonce: true
      issuerURL: https://dev-jf-ctr97.us.auth0.com/
      jwksURL: https://dev-jf-ctr97.us.auth0.com/.well-known/jwks.json
      # workaround: auth0 need 'audience' query param in login url to create valid access-token (see: https://github.com/oauth2-proxy/oauth2-proxy/issues/1406 and https://github.com/oauth2-proxy/oauth2-proxy/issues/1250)
      skipDiscovery: true
      userIDClaim: email
    provider: oidc
    redeemURL: https://dev-jf-ctr97.us.auth0.com/oauth/token
server:
  BindAddress: 0.0.0.0:4180
  SecureBindAddress: ""
  TLS: null
upstreamConfig:
  upstreams:
    - id: static://200
      path: /
      static: true
      staticCode: 200